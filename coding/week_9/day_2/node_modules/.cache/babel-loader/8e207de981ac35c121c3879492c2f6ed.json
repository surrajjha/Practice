{"ast":null,"code":"const INC_COUNTER = \"INC_COUNTER\";\nconst DEC_COUNTER = \"DEC_COUNTER\";\nconst ODD_INCREMENT = \"ODD_INCREMENT\";\nconst EVEN_INCREMENT = \"EVEN_INCREMENT\";\nconst MULTIPLY = \"MULTIPLY\";\nconst DIVIDE = \"DIVIDE\";\n\nconst incrementCounter = amount => {\n  return {\n    type: INC_COUNTER,\n    amount\n  };\n};\n\nconst decrementCounter = amount => {\n  return {\n    type: DEC_COUNTER,\n    amount\n  };\n};\n\nconst evenOddCounter = amount => {\n  if (amount % 2 == 0) return {\n    type: EVEN_INCREMENT,\n    amount\n  };else return {\n    type: ODD_INCREMENT,\n    amount\n  };\n};\n\nconst multiply = amount => {\n  return {\n    type: MULTIPLY,\n    amount\n  };\n};\n\nconst divide = amount => {\n  return {\n    type: DIVIDE,\n    amount\n  };\n};\n\nexport { incrementCounter, decrementCounter, evenOddCounter };","map":{"version":3,"sources":["/home/suraj/coding/week_9/day2/src/action.js"],"names":["INC_COUNTER","DEC_COUNTER","ODD_INCREMENT","EVEN_INCREMENT","MULTIPLY","DIVIDE","incrementCounter","amount","type","decrementCounter","evenOddCounter","multiply","divide"],"mappings":"AAAA,MAAMA,WAAW,GAAG,aAApB;AAEA,MAAMC,WAAW,GAAG,aAApB;AACA,MAAMC,aAAa,GAAC,eAApB;AACA,MAAMC,cAAc,GAAC,gBAArB;AACA,MAAMC,QAAQ,GAAC,UAAf;AACA,MAAMC,MAAM,GAAC,QAAb;;AAIA,MAAMC,gBAAgB,GAAGC,MAAM,IAAI;AACjC,SAAO;AACLC,IAAAA,IAAI,EAAER,WADD;AAELO,IAAAA;AAFK,GAAP;AAKD,CAND;;AAQA,MAAME,gBAAgB,GAAGF,MAAM,IAAI;AACjC,SAAO;AACLC,IAAAA,IAAI,EAAEP,WADD;AAELM,IAAAA;AAFK,GAAP;AAID,CALD;;AAMA,MAAMG,cAAc,GAAIH,MAAD,IAAY;AAC/B,MAAGA,MAAM,GAAE,CAAR,IAAY,CAAf,EACA,OAAO;AACLC,IAAAA,IAAI,EAAEL,cADD;AAELI,IAAAA;AAFK,GAAP,CADA,KAOK,OAAO;AACVC,IAAAA,IAAI,EAAGN,aADG;AAEVK,IAAAA;AAFU,GAAP;AAIN,CAZH;;AAaE,MAAMI,QAAQ,GAAEJ,MAAM,IAAI;AACtB,SAAO;AACHC,IAAAA,IAAI,EAACJ,QADF;AAEHG,IAAAA;AAFG,GAAP;AAIH,CALD;;AAMA,MAAMK,MAAM,GAAEL,MAAM,IAAI;AACtB,SAAO;AACHC,IAAAA,IAAI,EAACH,MADF;AAEHE,IAAAA;AAFG,GAAP;AAIH,CALC;;AAQF,SAASD,gBAAT,EAA2BG,gBAA3B,EAA4CC,cAA5C","sourcesContent":["const INC_COUNTER = \"INC_COUNTER\"; \n\nconst DEC_COUNTER = \"DEC_COUNTER\";\nconst ODD_INCREMENT=\"ODD_INCREMENT\";\nconst EVEN_INCREMENT=\"EVEN_INCREMENT\";\nconst MULTIPLY=\"MULTIPLY\";\nconst DIVIDE=\"DIVIDE\";\n\n\n\nconst incrementCounter = amount => {\n  return {\n    type: INC_COUNTER,\n    amount\n  \n  };\n};\n\nconst decrementCounter = amount => {\n  return {\n    type: DEC_COUNTER,\n    amount\n  };\n};\nconst evenOddCounter = (amount )=> {\n    if(amount %2 ==0)\n    return {\n      type: EVEN_INCREMENT,\n      amount\n    };\n  \n  \n    else return {\n      type:  ODD_INCREMENT,\n      amount\n    };\n  };\n  const multiply =amount => {\n      return {\n          type:MULTIPLY,\n          amount\n      };\n  };\n  const divide =amount => {\n    return {\n        type:DIVIDE,\n        amount\n    };\n};\n\n\nexport { incrementCounter, decrementCounter,evenOddCounter };\n"]},"metadata":{},"sourceType":"module"}